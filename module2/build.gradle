if (isModule){
    apply plugin: 'com.android.library'
}else{
    apply plugin: 'com.android.application'
}
def cfg = rootProject.ext.android
def appId = rootProject.ext.appId
android {
    compileSdkVersion cfg.compileSdkVersion
    defaultConfig {
        if (!isModule){
            applicationId appId['module2']
        }
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion  cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
   sourceSets {
       //在组件模式下 使用不同的manifest文件
       main{
           if(!isModule){
               manifest.srcFile 'src/main/module/AndroidManifest.xml'
               java.srcDirs 'src/main/module/java','src/main/java'
           }else{
               manifest.srcFile 'src/main/AndroidManifest.xml'
           }
       }

   }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':base')
}
